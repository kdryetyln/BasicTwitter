@using Twitter_New.Models
@using Twitter_New.SessionSetting
@model ICollection<TweetDto>

@{ Layout = null;
    TwitterDbContext db = new TwitterDbContext();
    var rt = db.Retweets.ToList();
    var tw = db.Tweets.ToList();
    var like = db.LikedTweets.ToList();
    var user = db.Users.ToList();
    var replyCount = db.RepplyTweets.ToList();
}

<div class="container">
    <!-- Modal Comment -->
    <div class="modal fade" id="myModal_comment" role="dialog">
        <div class="modal-dialog">
            <form action="/Tweet/CommentTweet/" method="post">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Compose new Reply Tweet</h4>
                    </div>
                    <div class="modal-body">
                        <div class="media">
                            <a class="media-left" href="#fake">
                                <img src="~/Css/twitter-egg-square.png" alt="" class="media-object img-rounded" width="32" height="32">
                            </a>
                            <div class="media-body form-group has-feedback">
                                <textarea class="form-control" rows="5" name="TweetBody" placeholder="Tweet your reply"></textarea>
                                <span class="glyphicon glyphicon-camera form-control-feedback" aria-hidden="true"></span>

                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-pencil" aria-hidden="true"> </span> Reply</button>
                    </div>

                </div>
            </form>
        </div>
    </div>

</div>



@foreach (var item in Model)
{
    <div class="shadow-lg p-3 mb-5 bg-white">
        <div class="media">
            <a class="media-left" href="#fake">
                <img alt="" class="media-object img-rounded" src="~/Css/twitter-egg-square.png" height="64" width="64">
            </a>
            <div class="media-body">
                <a href="/Home/FriendProfile/@item.UserID"><h4 class="media-heading">@item.UserName</h4></a>
                <p>@item.TweetBody</p>
                <a href="/Tweet/GetReply/@item.ID" style="color:black"> <h6>@item.CreatedDate</h6></a>
                <ul class="nav nav-pills nav-pills-custom">
                    <li><a href="/Tweet/TweetID/@item.ID" data-toggle="modal" data-target="#myModal_comment"><span class="glyphicon glyphicon-comment"></span><span>&nbsp;&nbsp;@replyCount.Where(k => k.TweetID == item.ID).ToList().Count()</span></a></li>
                    <li>
                        <a href="/Tweet/ReTweet/@item.ID">
                            @{ var userID = SessionSet<User>.Get("Login").ID;}
                            @{var result = rt.Where(k => k.UserID == userID && k.TweetID == item.ID).Any();
                                if (!result)
                                { <span class="glyphicon glyphicon-retweet"></span> }
                                else
                                { <span class="glyphicon glyphicon-retweet" style="color:#37c42e"></span> }
                            }<span>&nbsp;&nbsp;@rt.Where(k => k.TweetID == item.ID).ToList().Count()</span>
                        </a>
                    </li>

                    <li>
                        <a href="/Tweet/Liked/@item.ID" data-liked="">
                            @{ var result2 = like.Where(k => k.userID == userID && k.tweetID == item.ID).Any();
                                if (!result2)
                                {<span class="glyphicon glyphicon-heart-empty"></span>}
                                else
                                {<span class="glyphicon glyphicon-heart" style="color:red"></span>}
                            }<span>&nbsp;&nbsp;@like.Where(k => k.tweetID == item.ID).ToList().Count()</span>
                        </a>
                    </li>

                    @if (item.UserID == userID)
                    {
                        <li><a href="/Tweet/DeleteTweet/@item.ID"><span class="glyphicon glyphicon-trash"></span></a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
}
